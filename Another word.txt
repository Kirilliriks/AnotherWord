Основные возможности программы:
1 - Создание текстового файла	
	1.1 - С клавиатуры
	1.2 - Открытие существующего файла
2 - Редактирование строки
	2.2 - Вставка, удаление символа в любом месте текста
3 - Редактирование текста
	3.1 - Вставка новых строк
	3.2 - Удаление строки
4 - Выделение чисел
	4.1 - Целые со знаком
5 - Поиск информации
	5.1 - До первого совпадения
6 - Манипуляция мышью
	6.1 - Перемещение курсора мышью
	6.2 - Взаимодействие с меню мышью

Another Word состоит из 3-х основных модулей(классов):
1) Screen - модуль обеспечивающий удобное взаимодействие с консолью посредством WINDOWS API, а так же вывод информации (отрисовка)
2) TextEditor - хранит в себе всю текстовую информацию редактора, а так же основные методы взаимодействия с ней
3) AnotherWord - работая с TextEditor обеспечивает взаимодействие с пользователем посредством специального интерфейса

Классы интерфейса:
Button - класс простой кнопки
FileButton - класс кнопки раскрывающая операции из меню "File"
TextButton - класс кнопки раскрывающая операции из меню "Text"

Остальные классы:
Vector - хранит в себе x и y координаты
Color - набор перечислений цвета символа и цвета заднего фона символа
Timer - позволяет получить время прошедшее за выполнение одного цикла


Основной цикл программы начинается с выполнения метода AnotherWord::start() - он запускает цикличное
выполнение двух методов:
update - метод который обрабатывает все логические операции программы
draw - метод который отрисовывает выводимовую операцию (а так же формирует массив символов для корректного вывода)


Таблица методов Another Word
   Публичные методы:
    void start() - запуск основного цикла
    void close() - метод для корректного закрытия программы
    void update(float deltaTime) - метод который обрабатывает логику программы
	float deltaTime - время выполнения прошлого цикла 
    void draw(float deltaTime) - метод который выводит информацию для пользователя(текст его файла, интерфейс программы и т.д.)
	float deltaTime - время выполнения прошлого цикла 
    void loadFile(std::string fileName) - метод который загружает текстовый файл
	std::string path - название файла
    void saveFile(std::string fileName) - метод который сохраняет текстовый файл
	std::string path - название файла
    void findSubstring(std::string subString) - метод поиска подстроки
	std::string subString) - искомая подстрока
    void preOpenFile() - метод подготовкт к открытию файла (приведени программы в состояния ввода пользователем имени файла)
    void closeCurrent() - метод который закрывает текущий редактируемый игроком файл (БЕЗ СОХРАНЕНИЯ)
    void preInputString(State state) - метод подготовки к вводу строки для той или иной операции (к примеру поиск подстроки)
	State state - текущее состояние Another word - к примеру если EDITOR то в данный момент пользователь редактирует текст
    Button *getLastButton() - возвращает указатель на прошлое откртое меню
    std::string &getFileName() - возвращает ссылку на текущее название файла
    TextEditor &getTextEditor() - возвращает ссылку на текстовый редактор
   Приватные методы:
    void handleInput(float deltaTime) - общая обработка ввода(вызов нужных методов обработки)
    void handleStringInput() - обработка вводимой строки для той или иной программной операции
    bool handleButton(float deltaTime) - обработка взаимодействия с меню
    void handleKeyboard(float deltaTime) - обработка ввода с клавиатуры
    void handleMouse(float deltaTime) - обработки мыши

Таблица методов TextEditor 
   Публичные методы
    void preDraw() - метод подготавливает текстовую информацию к отрисовке
    void draw() - отрисовка текста
    void drawChar(char ch, int x, int y, Color color = Color::White, BackgroundColor backColor = BackgroundColor::Black) - выводит символ на экран
	char ch - выводимый символ
	int x, y - координаты на экране где будет выведен символ
	Color color - цвет символа
	BackgroundColor - цвет заднего фона символа
    void drawChar(char ch, Vector vector, Color color = Color::White, BackgroundColor backColor = BackgroundColor::Black) - перегрузка прошлого метода
	char ch - выводимый символ
	Vector vector - вектор хранящий координаты экрана где будет выведен символ
	Color color - цвет символа
	BackgroundColor - цвет заднего фона символа
    void drawLine(char ch, int x1, int y1, int x2, int y2, Color color = Color::White, BackgroundColor backColor = BackgroundColor::Black) - метод который отрисовывает линию из символов
	char ch - выводимый символ
	int x1, y1 - координаты начала линии
	int x2, y2 - координаты конца линии
	Color color - цвет символа
	BackgroundColor - цвет заднего фона символа
    void drawString(std::string str, int x, int y, Color color = Color::White, BackgroundColor backColor = BackgroundColor::Black) - метод выводит строку символов
	std::string str - выводимая строка
	int x, y - координаты где будет выведена строка
	Color color - цвет символа
	BackgroundColor - цвет заднего фона символа
    void moveCursor(Vector moveVector) - метод переносит текущую позицию курсора на заданный вектор
	Vector moveVector - вектор переноса курсора
    void setCursorPosition(Vector vector) - метод устанавливает курсор в заданную позицию
	Vector moveVector - вектор установки курсора
    void enterMove() -  метод обрабатотки нажатия пользователем клавиши Enter при редактировании текста
    void clearBuffers() - метод отчистки экранных буферов Символьного и Цветового
    void writeChar(char ch) - метод обработки вводимых пользователем символов
    void clearChar() - метод вызываемый при попытке пользователя стереть символ
    Vector &getScreenSize() - возвращает вектор размера консоли
    std::vector<std::string> &getData() - возвращает строки текста хранимые в векторе
    Vector getCursorPosition() - возвращает позицию курсора
   Приватные методы:
    Vector getTextCursorPosition() - возвращает позицию курсора смещённую для простаты взаимодействия с данными редакторам( грубо говоря там y - 1 =) )
    void putChar(char ch, Vector vector) - метод вставки символа в данные текстового редактора (вектор строк)

Таблица методов Screen
   Публичные методы
    void draw(wchar_t *charBuffer, WORD *colorBuffer) - метод отрисовывает экран консоли
	wchar_t *charBuffer - указатель на массив символов
	WORD *colorBuffer - указатель на массив цветов
    void setCursor(Vector vector) - метод устанавливает курсор в заданную позицию
	Vector vector - вектор координат куда должен быть установлен курсор
    Vector getMaxSize() - метод возвращает максимальный размер консоли в символах
    Vector getCursorPosition() - метод возвращает текущее положение курсора в консоли

